{"version":3,"file":"static/js/573.bac896d0.chunk.js","mappings":"gNAIe,SAASA,EAAeC,GACrC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAHAC,EAAAA,EAAAA,YAAU,YAVY,WACpB,IAAMC,EAAOC,KAAKC,MAAMC,EAAAA,EAAAA,QAA2B,SACnD,GAAKH,QAAiBI,IAATJ,EAIX,OADAF,GAAc,GACPJ,EAAS,cAHhBI,GAAc,EAKjB,CAGCO,EACD,GAAE,CAACR,KACG,SAAC,WAAD,UAAiBA,EAAa,KAAOJ,EAAMa,UACnD,C","sources":["Authentication/PreventReLogin.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, useNavigate } from \"react-router-dom\";\nimport secureLocalStorage from \"react-secure-storage\";\n\nexport default function PreventReLogin(props) {\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const checkUserData = () => {\n    const user = JSON.parse(secureLocalStorage.getItem(\"user\"));\n    if (!user || user === undefined) {\n      setIsLoggedIn(false);\n    } else {\n      setIsLoggedIn(true);\n      return navigate(\"/dashboard\");\n    }\n  };\n\n  useEffect(() => {\n    checkUserData();\n  }, [isLoggedIn]);\n  return <React.Fragment>{isLoggedIn ? null : props.children}</React.Fragment>;\n}\n"],"names":["PreventReLogin","props","navigate","useNavigate","useState","isLoggedIn","setIsLoggedIn","useEffect","user","JSON","parse","secureLocalStorage","undefined","checkUserData","children"],"sourceRoot":""}