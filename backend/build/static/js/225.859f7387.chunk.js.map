{"version":3,"file":"static/js/225.859f7387.chunk.js","mappings":"gNAIe,SAASA,EAAWC,GACjC,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAHAC,EAAAA,EAAAA,YAAU,YATY,WAEpB,GAAkB,UADLC,KAAKC,MAAMC,EAAAA,EAAAA,QAA2B,SAC1CC,KAEP,OADAL,GAAW,GACJJ,EAAS,cAElBI,GAAW,EACZ,CAGCM,EACD,GAAE,CAACP,KACG,SAAC,WAAD,UAAiBA,EAAUJ,EAAMY,SAAW,MACpD,C","sources":["Authentication/AdminRoute.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, useNavigate } from \"react-router-dom\";\nimport secureLocalStorage from \"react-secure-storage\";\n\nexport default function AdminRoute(props) {\n  const navigate = useNavigate();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const checkUserRole = () => {\n    const user = JSON.parse(secureLocalStorage.getItem(\"user\"));\n    if (user.role !== \"admin\") {\n      setIsAdmin(false);\n      return navigate(\"/dashboard\");\n    }\n    setIsAdmin(true);\n  };\n\n  useEffect(() => {\n    checkUserRole();\n  }, [isAdmin]);\n  return <React.Fragment>{isAdmin ? props.children : null}</React.Fragment>;\n}\n"],"names":["AdminRoute","props","navigate","useNavigate","useState","isAdmin","setIsAdmin","useEffect","JSON","parse","secureLocalStorage","role","checkUserRole","children"],"sourceRoot":""}