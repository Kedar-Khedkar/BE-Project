{"version":3,"file":"static/js/120.d897edd8.chunk.js","mappings":"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","sources":["component/User Account/StudentAccount.jsx","component/User Account/NonStudentAccount.jsx","pages/MyAccount.jsx","../node_modules/@mantine/core/src/Divider/Divider.styles.ts","../node_modules/@mantine/core/src/Divider/Divider.tsx","../node_modules/@tabler/icons-react/src/icons/IconPencil.js"],"sourcesContent":["import {\n  createStyles,\n  Center,\n  Avatar,\n  BackgroundImage,\n  Container,\n  Text,\n  Divider,\n  Badge,\n  Card,\n  TextInput,\n  ActionIcon,\n  Button,\n} from \"@mantine/core\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"@mantine/form\";\nimport axios from \"../../axiosConfig\";\nimport { IconPencil, IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nconst useStyles = createStyles((theme) => ({\n  card: {\n    backgroundColor:\n      theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n  },\n\n  avatar: {\n    border: `2px solid ${\n      theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white\n    }`,\n  },\n}));\n\nexport default function StudentAccount({ data }) {\n  const [isNotEdit, setIsNotEdit] = useState(true);\n  const { classes, theme } = useStyles();\n  console.log(data);\n  console.log(data.student.Parent.email, data.student.Parent.phone);\n\n  const initialValues = {\n    prn: data.student.prn,\n    rollno: data.student.rollno,\n    examseatno: data.student.examseatno,\n    curr_sem: data.student.curr_sem,\n    curryear: data.student.curryear,\n    // phone: data.Parent.phone,\n    // email : data.Parent.email,\n  };\n\n  // const initial = {\n  //   fullname: data.student.User.fullname,\n  //   email: data.student.User.email,\n  // };\n  // const formPersonal = useForm({ initial });\n\n  const form = useForm({ initialValues });\n  console.log(initialValues);\n  const updateStudent = (event, id) => {\n    event.preventDefault();\n    axios\n      .put(\n        `/student/${id}`,\n        { student: form.values },\n       \n      )\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"Information Updated Successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        console.log(res);\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: \"Something went wrong\",\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n    console.log(form.values);\n  };\n  // const updatePersonalData = (event, id) => {\n  //   event.preventDefault();\n  //   axios\n  //     .put(\n  //       `http://localhost:5000/users/${id}`,\n  //       { user: formPersonal.values },\n  //       { withCredentials: true }\n  //     )\n  //     .then((res) => {\n  //       showNotification({\n  //         title: \"Success\",\n  //         message: \"Information Updated Successfully\",\n  //         icon: <IconCheck />,\n  //         color: \"teal\",\n  //         autoClose: 2000,\n  //         radius: \"xl\",\n  //       });\n  //       console.log(res);\n  //     })\n  //     .catch((res) => {\n  //       showNotification({\n  //         title: \"Failed\",\n  //         message: \"Something went wrong\",\n  //         icon: <IconX />,\n  //         color: \"red\",\n  //         autoClose: 3500,\n  //         radius: \"xl\",\n  //       });\n  //     });\n  //   console.log(formPersonal.values);\n  // };\n\n  return (\n    <>\n      <Center mt={20}>\n        {/* <Avatar size={\"xl\"} radius=\"xl\" color=\"cyan\">\n          {data.student.User.fullname.split(\" \")[0][0] +\n            data.student.User.fullname.split(\" \")[1][0]}\n        </Avatar> */}\n        <Avatar size={\"xl\"} radius=\"xl\" color=\"cyan\">\n          {data.student.User.fullname.split(\" \")[0][0] +\n            data.student.User.fullname.split(\" \")[1][0]}\n        </Avatar>\n      </Center>\n      <Divider\n        my={\"sm\"}\n        label={\n          <>\n            <h1>{data.student.User.fullname}</h1>\n          </>\n        }\n        labelPosition={\"center\"}\n      ></Divider>\n      <Container>\n        <Center>\n          <Text>{data.student.User.email}</Text>\n          <Badge color=\"cyan\" size=\"lg\" variant=\"outline\" mx={16}>\n            Student\n          </Badge>\n        </Center>\n        <h1>Student Informaton</h1>\n        <Card>\n          <ActionIcon\n            ml={900}\n            onClick={() => {\n              setIsNotEdit(!isNotEdit);\n            }}\n          >\n            <IconPencil></IconPencil>\n          </ActionIcon>\n          <form\n            onSubmit={(e) => {\n              updateStudent(e, data.student.userId);\n              window.location.reload();\n            }}\n          >\n            {/* <TextInput disabled={isNotEdit} label=\"Fullname\" \n            defaultValue={data.student.User.fullname} withAsterisk \n            {...form.getInputProps(\"fullname\")} description=\"Your name in firstname<space>lastname format\"/> */}\n            {/* <TextInput disabled={isNotEdit}label=\"Email\" \n            defaultValue={data.student.User.email} withAsterisk \n            {...form.getInputProps(\"email\")} description=\"email associated with your account\"/> */}\n            <TextInput\n              type={Number}\n              mt=\"md\"\n              disabled={isNotEdit}\n              label=\"PRN\"\n              defaultValue={data.student.prn}\n              withAsterisk\n              {...form.getInputProps(\"prn\")}\n            />\n            <TextInput\n              type={Number}\n              mt=\"md\"\n              disabled={isNotEdit}\n              label=\"Roll No\"\n              defaultValue={data.student.rollno}\n              withAsterisk\n              {...form.getInputProps(\"rollno\")}\n            />\n            <TextInput\n              type={Number}\n              mt=\"md\"\n              disabled={isNotEdit}\n              label=\"Exam Seat No\"\n              defaultValue={data.student.examseatno}\n              withAsterisk\n              {...form.getInputProps(\"examseatno\")}\n            />\n            <TextInput\n              type={Number}\n              mt=\"md\"\n              disabled={true}\n              label=\"Current Semester\"\n              defaultValue={data.student.curr_sem}\n            />\n            <TextInput\n              type={Number}\n              mt=\"md\"\n              disabled={true}\n              label=\"Current Year\"\n              defaultValue={data.student.curryear}\n            />\n            <TextInput\n              label=\"Parent Email\"\n              mt=\"md\"\n              disabled={true}\n              defaultValue={data.student.Parent.email}\n            />\n            <TextInput\n              label=\"Parent Mobile Number\"\n              mt=\"md\"\n              disabled={true}\n              defaultValue={data.student.Parent.phone}\n            />\n\n            <Button mt={12} type=\"submit\" disabled={isNotEdit}>\n              Edit\n            </Button>\n          </form>\n        </Card>\n        {/* <h1>Personal Information</h1>\n        <Card>\n          <form\n            onSubmit={(e) => {\n              updatePersonalData(e, data.student.userId);\n            }}\n          >\n            <TextInput\n              disabled={isNotEdit}\n              label=\"Fullname\"\n              defaultValue={data.student.User.fullname}\n              withAsterisk\n              {...formPersonal.getInputProps(\"fullname\")}\n              description=\"Your name in firstname<space>lastname format\"\n            />\n            <TextInput\n              disabled={isNotEdit}\n              label=\"Email\"\n              defaultValue={data.student.User.email}\n              withAsterisk\n              {...formPersonal.getInputProps(\"email\")}\n              description=\"email associated with your account\"\n            />\n            <Button mt={12} type=\"submit\" disabled={isNotEdit}>\n              Edit\n            </Button>\n          </form>\n        </Card> */}\n      </Container>\n    </>\n  );\n}\n","import {\n  createStyles,\n  Center,\n  Avatar,\n  BackgroundImage,\n  Container,\n  Text,\n  Divider,\n  Badge,\n  Card,\n  TextInput,\n  Button,\n  ActionIcon,\n} from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { IconPencil, IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\nimport axios from \"../../axiosConfig\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = createStyles((theme) => ({\n  card: {\n    backgroundColor:\n      theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n  },\n\n  avatar: {\n    border: `2px solid ${\n      theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white\n    }`,\n  },\n}));\n\nexport default function NonStudentAccount({ data }) {\n  const initialValues = {\n    fullname: data.fullname,\n    email: data.email,\n    role: data.role,\n  };\n  const [isNotEdit, setIsNotEdit] = useState(true);\n  const form = useForm({ initialValues });\n  const { classes, theme } = useStyles();\n  console.log(\"inside component\", data);\n  const updatedata = (event, id) => {\n    event.preventDefault();\n    axios\n      .put(\n        `/datas/${id}`,\n        { data: form.values },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"Information Updated Successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        window.location.reload();\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: \"Something went wrong\",\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Center mt={20}>\n        <Avatar\n          size={\"xl\"}\n          radius=\"xl\"\n          color={data.role === \"admin\" ? \"red\" : \"yellow\"}\n        >\n          {data.fullname.split(\" \").length >= 2\n                        ? data.fullname.split(\" \")[0][0].toUpperCase() +\n                          data.fullname.split(\" \")[1][0].toUpperCase()\n                        : data.fullname.split(\" \")[0][0].toUpperCase() +\n                          data.fullname.split(\" \")[0][1].toUpperCase()}\n        </Avatar>\n         \n      </Center>\n      <Divider\n        my={\"sm\"}\n        label={\n          <>\n            <h1>{data.fullname}</h1>\n          </>\n        }\n        labelPosition={\"center\"}\n      ></Divider>\n      <Container>\n        <Center>\n          <Text>{data.email}</Text>\n          <Badge\n            color={data.role === \"admin\" ? \"red\" : \"yellow\"}\n            size=\"lg\"\n            variant=\"outline\"\n            mx={16}\n          >\n            {data.role}\n          </Badge>\n        </Center>\n        <Card>\n          <ActionIcon\n            ml={900}\n            onClick={() => {\n              setIsNotEdit(!isNotEdit);\n            }}\n          >\n            <IconPencil></IconPencil>\n          </ActionIcon>\n          <form\n            onSubmit={(e) => {\n              updatedata(e, data.id);\n            }}\n          >\n            <TextInput\n              disabled={isNotEdit}\n              label=\"Fullname\"\n              defaultValue={data.fullname}\n              withAsterisk\n              {...form.getInputProps(\"fullname\")}\n              description=\"Your name in firstname<space>lastname format\"\n            />\n            <TextInput\n              disabled={isNotEdit}\n              label=\"Email\"\n              defaultValue={data.email}\n              withAsterisk\n              {...form.getInputProps(\"email\")}\n              description=\"email associated with your account\"\n            />\n            <Button mt={12} type=\"submit\" disabled={isNotEdit}>\n              Edit\n            </Button>\n          </form>\n        </Card>\n      </Container>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport StudentAccount from \"../component/User Account/StudentAccount\";\nimport axios from \"../axiosConfig\";\nimport { Anchor, Center, Box } from \"@mantine/core\";\nimport NonStudentAccount from \"../component/User Account/NonStudentAccount\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport secureLocalStorage from \"react-secure-storage\";\n\nexport default function MyAccount() {\n  const [userData, setUserData] = useState(undefined);\n  const user = JSON.parse(secureLocalStorage.getItem(\"user\"));\n  useEffect(() => {\n    axios\n      .get(`/users/my-account`)\n      .then((res) => {\n        setUserData(res.data.objects);\n      });\n  }, []);\n\n  return (\n    <>\n      <Anchor href=\"/dashboard\" color={\"gray\"} mt={24}>\n        <Center inline>\n          {<IconArrowLeft size={24} stroke={1.5} />}\n          <Box ml={5}>Back to Dashboard</Box>\n        </Center>\n      </Anchor>\n      {userData && user.role === \"student\" && (\n        <StudentAccount data={userData}/>\n      )}\n      {userData && user.role !== \"student\" && (\n        <NonStudentAccount data={userData}/>\n      )}\n    </>\n  );\n}\n","import { createStyles, MantineNumberSize, MantineColor, MantineTheme } from '@mantine/styles';\n\nexport interface DividerStylesParams {\n  size: MantineNumberSize;\n  variant: 'solid' | 'dashed' | 'dotted';\n  color: MantineColor;\n}\n\nconst sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5,\n};\n\nfunction getColor(theme: MantineTheme, color: MantineColor) {\n  const themeColor = theme.fn.variant({ variant: 'outline', color }).border;\n\n  return typeof color === 'string' && (color in theme.colors || color.split('.')[0] in theme.colors)\n    ? themeColor\n    : color === undefined\n    ? theme.colorScheme === 'dark'\n      ? theme.colors.dark[4]\n      : theme.colors.gray[4]\n    : color;\n}\n\nexport default createStyles((theme, { size, variant, color }: DividerStylesParams) => ({\n  root: {},\n\n  withLabel: {\n    borderTop: '0 !important',\n  },\n\n  left: {\n    '&::before': {\n      display: 'none',\n    },\n  },\n\n  right: {\n    '&::after': {\n      display: 'none',\n    },\n  },\n\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '&::before': {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${getColor(theme, color)}`,\n      marginRight: theme.spacing.xs,\n    },\n\n    '&::after': {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${getColor(theme, color)}`,\n      marginLeft: theme.spacing.xs,\n    },\n  },\n\n  labelDefaultStyles: {\n    color:\n      color === 'dark'\n        ? theme.colors.dark[1]\n        : theme.fn.themeColor(\n            color,\n            theme.colorScheme === 'dark' ? 5 : theme.fn.primaryShade(),\n            false\n          ),\n  },\n\n  horizontal: {\n    border: 0,\n    borderTopWidth: theme.fn.size({ size, sizes }),\n    borderTopColor: getColor(theme, color),\n    borderTopStyle: variant,\n    margin: 0,\n  },\n\n  vertical: {\n    border: 0,\n    alignSelf: 'stretch',\n    height: 'auto',\n    borderLeftWidth: theme.fn.size({ size, sizes }),\n    borderLeftColor: getColor(theme, color),\n    borderLeftStyle: variant,\n  },\n}));\n","import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport useStyles from './Divider.styles';\nimport { Text } from '../Text';\nimport { Box } from '../Box';\n\nexport type DividerStylesNames = 'label';\n\nexport interface DividerProps\n  extends DefaultProps<DividerStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Line color from theme, defaults to gray in light color scheme and to dark in dark color scheme */\n  color?: MantineColor;\n\n  /** Line orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Sets height in horizontal orientation and width in vertical */\n  size?: MantineNumberSize;\n\n  /** Adds text after line in horizontal orientation */\n  label?: React.ReactNode;\n\n  /** Label position */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Props spread to Text component in label */\n  labelProps?: Record<string, any>;\n\n  /** Divider borderStyle */\n  variant?: 'solid' | 'dashed' | 'dotted';\n}\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: 'horizontal',\n  size: 'xs',\n  labelPosition: 'left',\n  variant: 'solid',\n};\n\nexport const Divider = forwardRef<HTMLDivElement, DividerProps>((props: DividerProps, ref) => {\n  const {\n    className,\n    color,\n    orientation,\n    size,\n    label,\n    labelPosition,\n    labelProps,\n    variant,\n    styles,\n    classNames,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Divider', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { color, size, variant },\n    { classNames, styles, unstyled, name: 'Divider' }\n  );\n\n  const vertical = orientation === 'vertical';\n  const horizontal = orientation === 'horizontal';\n  const withLabel = !!label && horizontal;\n\n  const useLabelDefaultStyles = !labelProps?.color;\n\n  return (\n    <Box\n      ref={ref}\n      className={cx(\n        classes.root,\n        {\n          [classes.vertical]: vertical,\n          [classes.horizontal]: horizontal,\n          [classes.withLabel]: withLabel,\n        },\n        className\n      )}\n      role=\"separator\"\n      {...others}\n    >\n      {withLabel && (\n        <Text\n          {...labelProps}\n          size={labelProps?.size || 'xs'}\n          sx={{ marginTop: 2 }}\n          className={cx(classes.label, classes[labelPosition], {\n            [classes.labelDefaultStyles]: useLabelDefaultStyles,\n          })}\n        >\n          {label}\n        </Text>\n      )}\n    </Box>\n  );\n});\n\nDivider.displayName = '@mantine/core/Divider';\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('pencil', 'IconPencil', [\n  [\n    'path',\n    { d: 'M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4', key: 'svg-0' },\n  ],\n  ['path', { d: 'M13.5 6.5l4 4', key: 'svg-1' }],\n]);\n"],"names":["useStyles","createStyles","theme","card","backgroundColor","colorScheme","colors","dark","white","avatar","border","StudentAccount","data","useState","isNotEdit","setIsNotEdit","classes","console","log","student","Parent","email","phone","initialValues","prn","rollno","examseatno","curr_sem","curryear","form","useForm","Center","mt","Avatar","size","radius","color","User","fullname","split","Divider","my","label","labelPosition","Container","Text","Badge","variant","mx","Card","ActionIcon","A","ml","onClick","IconPencil","onSubmit","e","event","id","userId","preventDefault","axios","values","then","res","showNotification","title","message","icon","IconCheck","autoClose","catch","IconX","window","location","reload","TextInput","type","Number","disabled","defaultValue","withAsterisk","getInputProps","Button","NonStudentAccount","role","length","toUpperCase","withCredentials","description","MyAccount","undefined","userData","setUserData","user","JSON","parse","secureLocalStorage","useEffect","objects","Anchor","href","inline","IconArrowLeft","stroke","Box","sizes","xs","sm","md","lg","xl","getColor","themeColor","fn","gray","root","withLabel","borderTop","left","display","right","alignItems","content","flex","height","marginRight","spacing","marginLeft","labelDefaultStyles","primaryShade","horizontal","borderTopWidth","borderTopColor","borderTopStyle","margin","vertical","alignSelf","borderLeftWidth","borderLeftColor","borderLeftStyle","__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","defaultProps","orientation","forwardRef","props","ref","useComponentDefaultProps","className","_a","labelProps","styles","classNames","unstyled","others","source","exclude","target","indexOf","__objRest","name","cx","useLabelDefaultStyles","React","sx","marginTop","displayName","createReactComponent","d"],"sourceRoot":""}