{"version":3,"file":"static/js/934.d689cdf3.chunk.js","mappings":"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","sources":["component/Charts/AnimatedProgressBarCircle.jsx","component/Charts/AreaChart.jsx","component/Charts/BarChart.jsx","component/Attendance/AttendanceFilter.jsx","component/Attendance/Table.jsx","component/Attendance/Layout.jsx","component/Charts/YearlyStats.jsx","component/Attendance/AttendanceDash.jsx","component/Spreadsheets/AttendanceReport.jsx","component/Attendance/EditAttendance.jsx","component/Scribe/Attendancescribe.jsx","pages/AttendanceTabs.jsx"],"sourcesContent":["import React from \"react\";\nimport { Paper, Center, Text, Title } from \"@mantine/core\";\nimport { VictoryPie } from \"victory\";\nimport { IconBan } from \"@tabler/icons-react\";\n\nexport default function AnimatedProgressBarCircle({\n  data,\n  title,\n  color,\n  dataDisplay,\n}) {\n  console.log(data);\n  if (data == null) {\n    data = 0;\n  }\n  // const value = Number(data[0].deptAvg) * 100;\n  return (\n    <>\n      <Paper shadow=\"md\" radius=\"xl\" p=\"md\">\n        <Text size={\"lg\"}>\n          {`${title}`}\n          <strong> {dataDisplay}</strong>\n        </Text>\n        {!isNaN(data) && (\n          <VictoryPie\n            data={[\n              { x: Math.round(Number(data) * 100) / 100, y: Number(data) },\n              {\n                x: Math.round((100 - data) * 100) / 100,\n                y: 100 - Number(data),\n              },\n            ]}\n            colorScale={\n              color ? [color, \"whitesmoke\"] : [\"tomato\", \"whitesmoke\"]\n            }\n            innerRadius={100}\n          />\n        )}\n        {isNaN(data) && (\n          <>\n            <Center m={\"xl\"}>\n              <IconBan size={\"xl\"} color={\"gray\"} />\n              {/* <Title m={\"xl\"}>No Data</Title> */}\n            </Center>\n            <Center>\n              <Title order={3} color={\"gray\"}>\n                No Data\n              </Title>\n            </Center>\n          </>\n        )}\n        <Center>\n          <Text size={\"xl\"} weight={\"bold\"}>\n            {title}\n          </Text>\n        </Center>\n      </Paper>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Paper, Center, Text } from \"@mantine/core\";\nimport { VictoryLine, VictoryChart, VictoryAxis, VictoryTheme } from \"victory\";\n\nexport default function AreaChart({ data, title }) {\n  console.log(\"Area chart\", data);\n  const xAxis = data.map((obj) => new Date(obj.date).toLocaleDateString());\n  console.log(xAxis);\n  return (\n    <>\n      <Paper shadow=\"md\" radius=\"xl\" p=\"md\">\n        <Text size={\"lg\"}>{title}</Text>\n        <VictoryChart theme={VictoryTheme.material}>\n          <VictoryAxis tickValues={xAxis} tickFormat={xAxis} />\n          <VictoryAxis\n            dependentAxis\n            // tickFormat specifies how ticks should be displayed\n            tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]}\n            tickFormat={(x) => `${x}%`}\n            minDomain={{ x: 0 }}\n            // label={\"Avg Attendance (%)\"}\n          />\n          <VictoryLine\n            interpolation=\"natural\"\n            data={data.map((obj) => ({\n              date: new Date(obj.date).toLocaleDateString(),\n              avg: (Math.round(Number(obj.avg)) * 100) / 100,\n            }))}\n            x={\"date\"}\n            y={\"avg\"}\n          />\n        </VictoryChart>\n        <Center>\n          <Text size={\"xl\"} weight={\"bold\"}>\n            {title}\n          </Text>\n        </Center>\n      </Paper>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Paper, Center, Text } from \"@mantine/core\";\nimport { VictoryBar, VictoryChart, VictoryTheme, VictoryAxis } from \"victory\";\n\nexport default function BarChart({ data, title, x, y, y_tickValues, color }) {\n  console.log(data);\n  // const value = Number(data[0].deptAvg) * 100;\n  return (\n    <>\n      <Paper shadow=\"md\" radius=\"xl\" p=\"md\">\n        <Text size={\"lg\"}>{`${title}`}</Text>\n        <VictoryChart theme={VictoryTheme.material} domainPadding={20}>\n          <VictoryAxis\n            // tickValues specifies both the number of ticks and where\n            // they are placed on the axis\n            tickValues={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n            tickFormat={(y) => `${y}`}\n            maxDomain={{ y: 100 }}\n            // label={\"Subject co\"}\n          />\n          <VictoryAxis\n            dependentAxis\n            // tickFormat specifies how ticks should be displayed\n            tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]}\n            tickFormat={(x) => `${x}%`}\n            minDomain={{ x: 0 }}\n            // label={\"Avg Attendance (%)\"}\n          />\n          <VictoryBar\n            data={data}\n            x={x}\n            y={y}\n            style={{ data: { fill: color } }}\n          />\n          {/* <VictoryAxis dependentAxis tickValues={y_tickValues} /> */}\n        </VictoryChart>\n        <Center>\n          <Text size={\"xl\"} weight={\"bold\"}>\n            {title}\n          </Text>\n        </Center>\n      </Paper>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, NativeSelect, Grid } from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { DatePicker } from \"@mantine/dates\";\nimport { IconCalendarEvent, IconBooks, IconSchool } from \"@tabler/icons-react\";\n\nexport default function AttendanceFilter({ children, onChange, reqData }) {\n  const [selectData, setSelectData] = useState([\"fetching data...\"]);\n  const [date, setDate] = useState(new Date());\n  const [filters, setFilters] = useState({\n    for: new Date(),\n    subject: \"\",\n  });\n  const getData = (filters) => {\n    if (filters.subject !== \"Select\") {\n      console.log({ filters: { ...filters } });\n      axios\n        .post(\n          \"/attend\",\n          { filters: { ...filters } },\n        )\n        .then((res) => {\n          console.log(res);\n          onChange(res.data);\n        });\n    }\n  };\n  useEffect(() => {\n    getData(filters);\n  }, [filters, reqData]);\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/faculty\", { withCredentials: true })\n      .then((res) => {\n        const objects = res.data.objects;\n        let temp = [\"Select a subject\"];\n        objects.forEach((object) => {\n          temp.push(`${object.Subject.subCode} ${object.Subject.subName}`);\n        });\n        setSelectData(temp);\n      });\n  }, []);\n  return (\n    <Container>\n      <Grid gutter={5} gutterXs=\"md\" gutterMd=\"xl\" gutterXl={50}>\n        <Grid.Col span={6}>\n          <NativeSelect\n            data={selectData}\n            label=\"Select Subject\"\n            description=\"This will display all the students for the subject\"\n            radius=\"lg\"\n            size=\"md\"\n            withAsterisk\n            onChange={(e) => {\n              setFilters({ ...filters, subject: e.target.value.split(\" \")[0] });\n            }}\n            icon={<IconBooks size={24} />}\n          />\n        </Grid.Col>\n        <Grid.Col span={6}>\n          <DatePicker\n            label=\"Select Date\"\n            description=\"Choose the date you wish to see attendance for\"\n            radius=\"lg\"\n            size=\"md\"\n            withAsterisk\n            value={date}\n            onChange={(e) => {\n              setDate(e);\n              setFilters({ ...filters, for: e });\n            }}\n            icon={<IconCalendarEvent size={16} />}\n            placeholder=\"select a range\"\n          />\n        </Grid.Col>\n        {/* <Grid.Col span={4}>\n          <NativeSelect\n            data={[\"2\", \"3\", \"4\"]}\n            label=\"Select Year\"\n            description=\"Choose which year students need to be displayed\"\n            defaultValue={\"2\"}\n            onChange={(e) => {\n              setFilters({ ...filters, year: e.target.value });\n            }}\n            radius=\"lg\"\n            size=\"md\"\n            icon={<IconSchool size={24} />}\n            withAsterisk\n          />\n        </Grid.Col> */}\n      </Grid>\n      {children}\n    </Container>\n  );\n}\n","import { useState } from \"react\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport {\n  createStyles,\n  Table,\n  Checkbox,\n  ScrollArea,\n  Group,\n  Avatar,\n  Text,\n  Button,\n} from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\n\nconst useStyles = createStyles((theme) => ({\n  rowSelected: {\n    backgroundColor:\n      theme.colorScheme === \"dark\"\n        ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2)\n        : theme.colors[theme.primaryColor][0],\n  },\n}));\n\nexport default function TableSelection({\n  data,\n  subCode,\n  createdAt,\n  reqRefresh,\n}) {\n  let presenteeList = [];\n  console.log(data);\n  data.forEach((obj) => {\n    let attendObj = {};\n    attendObj.StudentUserId = obj.userId;\n    attendObj.presentee = false;\n    attendObj.SubjectSubCode = subCode;\n    attendObj.createdAt = createdAt;\n    presenteeList.push(attendObj);\n  });\n  console.log(presenteeList);\n  const { classes, cx } = useStyles();\n  const [btnState, setBtnState] = useState(false);\n  const [selection, setSelection] = useState([]);\n\n  const toggleRow = (id) => {\n    setSelection((current) =>\n      current.includes(id)\n        ? current.filter((item) => item !== id)\n        : [...current, id]\n    );\n  };\n  const toggleAll = () =>\n    setSelection((current) =>\n      current.length === data.length ? [] : data.map((item) => item.userId)\n    );\n\n  const markAttendance = () => {\n    if (presenteeList.length === 0) {\n      setBtnState(false);\n      return;\n    }\n    setBtnState(true);\n    // showNotification({\n    //   title: \"Updating Attendance\",\n    //   message: \"Commiting your Changes to Database...\",\n    //   disallowClose: true,\n    //   loading: true,\n    // });\n    presenteeList.forEach((obj) => {\n      if (selection.includes(obj.StudentUserId)) {\n        obj.presentee = true;\n      } else {\n        obj.presentee = false;\n      }\n    });\n    axios\n      .post(\"/attend/multiple\", presenteeList)\n      .then((res) => {\n        showNotification({\n          title: \"Success!\",\n          message: \"Attendance marked.\",\n          color: \"teal\",\n          icon: <IconCheck />,\n          disallowClose: false,\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        reqRefresh(\"stats\");\n      })\n      .catch((err) =>\n        showNotification({\n          title: \"Failed!\",\n          message: err.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 2000,\n          radius: \"xl\",\n        })\n      );\n    setBtnState(false);\n  };\n\n  const rows = data.map((item) => {\n    const selected = selection.includes(item.userId);\n    return (\n      <tr key={item.userId} className={cx({ [classes.rowSelected]: selected })}>\n        <td>\n          <Checkbox\n            checked={selection.includes(item.userId)}\n            onChange={(e) => toggleRow(item.userId)}\n            transitionDuration={0}\n          />\n        </td>\n        <td>\n          <Group spacing=\"sm\">\n            <Avatar size={26} src={item.avatar} radius={26} />\n            <Text size=\"sm\" weight={500}>\n              {item.User.fullname}\n            </Text>\n          </Group>\n        </td>\n        <td>{item.rollno}</td>\n        {/* <td>{currdate}</td> */}\n      </tr>\n    );\n  });\n\n  return (\n    <ScrollArea>\n      <Table sx={{ minWidth: 800 }} verticalSpacing=\"sm\" highlightOnHover>\n        <thead>\n          <tr>\n            <th style={{ width: 40 }}>\n              <Checkbox\n                onChange={toggleAll}\n                checked={selection.length === data.length}\n                indeterminate={\n                  selection.length > 0 && selection.length !== data.length\n                }\n                transitionDuration={0}\n              />\n            </th>\n            <th>Name</th>\n            <th>Roll No.</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n      <Button\n        size=\"lg\"\n        mt={40}\n        onClick={markAttendance}\n        loading={btnState}\n        disabled={createdAt === null || subCode === undefined}\n      >\n        Mark Attendance\n      </Button>\n    </ScrollArea>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, NativeSelect, Grid } from \"@mantine/core\";\nimport { DatePicker } from \"@mantine/dates\";\nimport { IconCalendarEvent } from \"@tabler/icons-react\";\nimport axios from \"../../axiosConfig\";\n\nimport Table from \"./Table\";\n\nexport default function Attendance({ reqRefresh }) {\n  const [studentList, setStudentList] = useState([]);\n  const [subjectList, setSubjectList] = useState([]);\n  const [selectData, setSelectData] = useState([\"fetching data...\"]);\n  const [subjectSubCode, setSubjectSubCode] = useState(undefined);\n  const [createdAt, setCreatedAt] = useState(new Date());\n\n  /* Fetching data from the server and setting the state of the component. */\n  useEffect(() => {\n    axios\n      .get(\"/faculty\")\n      .then((res) => {\n        const objects = res.data.objects;\n        setSubjectList(objects);\n      });\n  }, []);\n  useEffect(() => {}, [selectData, createdAt]); // to re-render table on dropdown value change\n  useEffect(() => {\n    let temp = [\"Select a subject\"];\n    subjectList.forEach((obj) => {\n      temp.push(`${obj.Subject.subCode} ${obj.Subject.subName}`);\n    });\n    setSelectData(temp);\n  }, [subjectList]);\n\n  /**\n   * It fetches students from the database based on the subject code.\n   */\n  const fetchStudents = (e) => {\n    let sem = -1;\n    let SubCode = e.target.value.split(\" \")[0];\n    subjectList.forEach((obj) => {\n      let subcode = obj.Subject.subCode;\n      if (subcode === SubCode) {\n        sem = obj.Subject.sem;\n      }\n    });\n    if (sem !== -1) {\n      axios\n        .get(`http://localhost:5000/student/search?curr_sem=${sem}`, {\n          withCredentials: true,\n        })\n        .then((res) => {\n          // console.log(res.data.objects);\n          setStudentList(res.data.objects);\n          setSubjectSubCode(SubCode);\n        });\n    }\n  };\n  return (\n    /* A fragment. It is used to group a list of children without adding extra nodes to the DOM. */\n    <>\n      <Container>\n        <h1>Mark Attendance</h1>\n        <Grid gutter={5} gutterXs=\"md\" gutterMd=\"xl\" gutterXl={50}>\n          <Grid.Col span={6}>\n            <NativeSelect\n              data={selectData}\n              label=\"Select Subject\"\n              description=\"This will display all the students for the subject\"\n              radius=\"lg\"\n              size=\"md\"\n              withAsterisk\n              onChange={fetchStudents}\n            />\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <DatePicker\n              placeholder=\"Pick date\"\n              label=\"Lecture Date \"\n              description=\"Choose the date for which you want to mark attendance.\"\n              radius=\"lg\"\n              size=\"md\"\n              icon={<IconCalendarEvent size={16} />}\n              name=\"createdAt\"\n              value={createdAt}\n              onChange={(e) => setCreatedAt(e)}\n              withAsterisk\n            />\n          </Grid.Col>\n        </Grid>\n        {\n          <Table\n            data={studentList}\n            subCode={subjectSubCode}\n            createdAt={createdAt}\n            reqRefresh={reqRefresh}\n          />\n        }\n      </Container>\n    </>\n  );\n}\n","import { Center, Paper, SimpleGrid, Title, Divider } from \"@mantine/core\";\nimport { DatePicker } from \"@mantine/dates\";\nimport React from \"react\";\nimport AnimatedProgressBarCircle from \"./AnimatedProgressBarCircle\";\nimport BarChart from \"../Charts/BarChart\";\nimport { IconCalendarEvent } from \"@tabler/icons-react\";\n\nexport default function YearlyStats({ data, currFilters, setFilters }) {\n  console.log(\"yearly\", data);\n  return (\n    <Paper shadow=\"md\" radius=\"xl\" p=\"md\">\n      <Center>\n        <Title m={24} order={3}>\n          Daily Count:\n        </Title>\n        <DatePicker\n          //   label=\"Select Date\"\n          //   description=\"Choose the date you wish to see attendance for\"\n          radius=\"lg\"\n          size=\"md\"\n          withAsterisk\n          value={new Date(currFilters.date)}\n          onChange={(e) => {\n            let date = new Date();\n            date.setDate(e.getDate());\n            setFilters({\n              ...currFilters,\n              date: date.toISOString().slice(0, 10),\n            });\n          }}\n          icon={<IconCalendarEvent size={16} />}\n          placeholder=\"dd-mm-yy\"\n        />\n      </Center>\n      <SimpleGrid cols={3}>\n        <AnimatedProgressBarCircle\n          title={\"SE Attendance\"}\n          color=\"cyan\"\n          data={Number(data[0].avg[0].deptAvg)}\n          dataDisplay={`${Number(data[0].avg[0].deptAvg)}%`}\n        />\n        <AnimatedProgressBarCircle\n          title={\"TE Attendance\"}\n          color=\"yellow\"\n          data={Number(data[1].avg[0].deptAvg)}\n          dataDisplay={`${Number(data[1].avg[0].deptAvg)}%`}\n        />\n        <AnimatedProgressBarCircle\n          title={\"BE Attendance\"}\n          color=\"brown\"\n          data={Number(data[2].avg[0].deptAvg)}\n          dataDisplay={`${Number(data[1].avg[0].deptAvg)}%`}\n        />\n      </SimpleGrid>\n      <h1>Subjectwise Distribution (SE, TE, BE)</h1>\n      <Divider mb={6} />\n      <SimpleGrid cols={2}>\n        <BarChart\n          title={\"SE Subjectwise Average Attendance for the day\"}\n          data={data[0].subwise.map((element) => ({\n            ...element,\n            avg: Math.round(Number(element.avg) * 100) / 100,\n          }))}\n          x={\"SubjectSubCode\"}\n          y={\"avg\"}\n          color=\"cyan\"\n        />\n        <BarChart\n          title={\"TE Subjectwise Average Attendance for the day\"}\n          data={data[1].subwise.map((element) => ({\n            ...element,\n            avg: Math.round(Number(element.avg) * 100) / 100,\n          }))}\n          x={\"SubjectSubCode\"}\n          y={\"avg\"}\n          color=\"yellow\"\n        />\n        <BarChart\n          title={\"BE Subjectwise Average Attendance for the day\"}\n          data={data[2].subwise.map((element) => ({\n            ...element,\n            avg: Math.round(Number(element.avg) * 100) / 100,\n          }))}\n          x={\"SubjectSubCode\"}\n          y={\"avg\"}\n          color=\"brown\"\n        />\n      </SimpleGrid>\n    </Paper>\n  );\n}\n","import { Divider, SimpleGrid } from \"@mantine/core\";\nimport React from \"react\";\nimport AnimatedProgressBarCircle from \"../Charts/AnimatedProgressBarCircle\";\nimport AreaChart from \"../Charts/AreaChart\";\nimport YearlyStats from \"../Charts/YearlyStats\";\n\nexport default function AttendanceDash({ data, currFilters, setFilters }) {\n  console.log(data);\n  return (\n    <>\n      {data && (\n        <>\n          <h1>Departmentwise Distribution</h1>\n          <Divider mb={6} />\n          <SimpleGrid\n            cols={2}\n            breakpoints={[{ maxWidth: 980, cols: 1, spacing: \"md\" }]}\n          >\n            <div>\n              <AnimatedProgressBarCircle\n                data={data.deptAvg[0].deptAvg}\n                title={\"Average Department Attendance\"}\n                dataDisplay={`${data.deptAvg[0].deptAvg}%`}\n              />\n            </div>\n\n            <div>\n              <AreaChart\n                title={\"Daily Average Attendance (Last 5 days)\"}\n                data={data.dailyAvg}\n              />\n            </div>\n          </SimpleGrid>\n          <h1>Classwise Distribution (SE, TE, BE)</h1>\n          <Divider mb={6} />\n          <SimpleGrid\n            cols={1}\n            breakpoints={[{ maxWidth: 980, cols: 1, spacing: \"md\" }]}\n          >\n            <YearlyStats\n              data={data.classwise}\n              currFilters={currFilters}\n              setFilters={setFilters}\n            ></YearlyStats>\n          </SimpleGrid>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.full.min.css\";\nimport { HyperFormula } from \"hyperformula\";\nimport { registerAllModules } from \"handsontable/registry\";\nimport { Button, Container, Paper, Text, Title } from \"@mantine/core\";\nimport { IconDownload } from \"@tabler/icons-react\";\nexport default function AttendanceReport({ data, filters }) {\n  registerAllModules();\n  HyperFormula.buildEmpty({\n    licenseKey: \"internal-use-in-handsontable\",\n  });\n  data = data.map((element) => ({\n    ...element,\n    presentee: Number(element.presentee),\n  }));\n  data = [...data, [null], [null]];\n  const hotRef = useRef(null);\n  let buttonClickCallback;\n  useEffect(() => {\n    const hot = hotRef.current.hotInstance;\n    hot.setDataAtCell([\n      [data.length - 2, 0, \"Total\"],\n      [data.length - 2, 1, \"Count\"],\n      [data.length - 2, 2, \"Percentage\"],\n      [data.length - 1, 0, `=COUNT(C1:C${data.length - 2})`],\n      [data.length - 1, 1, `=SUM(C1:C${data.length - 2})`],\n      [data.length - 1, 2, `=AVERAGE(C1:C${data.length - 2})*100`],\n    ]);\n    const exportPlugin = hot.getPlugin(\"exportFile\");\n    buttonClickCallback = () => {\n      exportPlugin.downloadFile(\"csv\", {\n        bom: false,\n        columnDelimiter: \",\",\n        columnHeaders: true,\n        exportHiddenColumns: true,\n        exportHiddenRows: true,\n        fileExtension: \"csv\",\n        filename: `Attendance_report_${new Date(filters.date).toDateString()}`,\n        mimeType: \"text/csv\",\n        rowDelimiter: \"\\r\\n\",\n        rowHeaders: true,\n      });\n    };\n  });\n  return (\n    <Container mt={40}>\n      <Paper shadow={\"md\"} p=\"md\">\n        <Title order={3}>Generated report:</Title>\n        <Text td={\"underline\"}>\n          NOTE: The below table supports full spreadsheets functionality, you\n          can customize this report and download according to your needs.\n        </Text>\n        <HotTable\n          contextMenu\n          manualColumnMove\n          manualColumnResize\n          manualRowMove\n          manualRowResize\n          allowInsertColumn\n          allowInsertRow\n          allowRemoveColumn\n          allowRemoveRow\n          ref={hotRef}\n          formulas={{\n            engine: HyperFormula,\n          }}\n          licenseKey=\"non-commercial-and-evaluation\"\n          dataSchema={{\n            presentee: null,\n            createdAt: null,\n            StudentUserId: null,\n            SubjectSubCode: null,\n            Student: {\n              rollno: null,\n              User: {\n                fullname: null,\n              },\n            },\n          }}\n          data={data}\n          height=\"auto\"\n          width=\"100%\"\n          stretchH=\"all\"\n          dropdownMenu\n          rowHeaders={true}\n          columnSorting={{ indicator: true }}\n          colHeaders={[\n            \"Student Name\",\n            \"Roll number\",\n            `${new Date(filters.date).toDateString()}`,\n          ]}\n          columns={[\n            { data: \"Student.User.fullname\" },\n            { data: \"Student.rollno\" },\n            { data: \"presentee\" },\n          ]}\n        />\n        <Button\n          mt={12}\n          fullWidth\n          onClick={(...args) => buttonClickCallback(...args)}\n          leftIcon={<IconDownload />}\n        >\n          Download as CSV\n        </Button>\n      </Paper>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Badge, NativeSelect, Table } from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nexport default function EditAttendance({ data, reqRefresh, filters }) {\n  console.log(data);\n  console.log(\"[RENDER]\");\n  const [isEdit, setIsEdit] = useState(undefined);\n  const updatePresentee = (obj) => {\n    console.log(obj);\n    obj.presentee = obj.presentee == \"Present\" ? true : false;\n    axios\n      .put(\n        \"/attend\",\n        { ...obj }\n      )\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"Information Updated Successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        reqRefresh(Math.random());\n      })\n      .catch((res) => {\n        console.log(res);\n        showNotification({\n          title: \"Failed\",\n          message: res.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n\n  const rows = data.map((element) => (\n    <tr key={element.StudentUserId}>\n      <td>{element.Student.User.fullname}</td>\n      <td>{element.Student.rollno}</td>\n      <td>\n        <NativeSelect\n          data={[\"Present\", \"Absent\"]}\n          value={element.presentee ? \"Present\" : \"Absent\"}\n          onFocus={(e) => {\n            setIsEdit(element.StudentUserId);\n          }}\n          onChange={(e) => {\n            updatePresentee({\n              StudentUserId: element.StudentUserId,\n              createdAt: element.createdAt,\n              SubjectSubCode: element.SubjectSubCode,\n              presentee: e.target.value,\n            });\n          }}\n          variant={isEdit === element.StudentUserId ? \"filled\" : \"unstyled\"}\n        ></NativeSelect>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Student Name</th>\n          <th>Roll Number</th>\n          <th>Attendance</th>\n        </tr>\n      </thead>\n      <tbody>{rows}</tbody>\n    </Table>\n  );\n}\n","import React from 'react';\nimport { Accordion } from '@mantine/core';\n\nfunction Attendancescribe() {\n  return (\n    <Accordion defaultValue=\"customization\">\n    <Accordion.Item value=\"Attendance Dashboard\">\n      <Accordion.Control>Attendance  Dashboard</Accordion.Control>\n      <Accordion.Panel><iframe src=\"https://scribehow.com/embed/Workflow__Y3M157ztSbWJIhIhyzRPwA\"\n       width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n    </Accordion.Item>\n\n    <Accordion.Item value=\"Mark Attendance\">\n      <Accordion.Control>Mark Attendance</Accordion.Control>\n      <Accordion.Panel><iframe src=\"https://scribehow.com/embed/Mark_attendance_for_event__NdepXuboR_O-XBqEdJawaA\" width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n    </Accordion.Item>\n\n    <Accordion.Item value=\"Edit Attendance\">\n      <Accordion.Control>Edit Attendance</Accordion.Control>\n      <Accordion.Panel><iframe src=\"https://scribehow.com/embed/How_to_Claim_and_Unclaim_a_Subject__mpfkYUsVRVWBT82qKGnNUw\" \n      width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n    </Accordion.Item>\n\n\n    <Accordion.Item value=\"Report Generation\">\n      <Accordion.Control>Report Generation</Accordion.Control>\n      <Accordion.Panel><iframe src=\"https://scribehow.com/embed/How_to_Claim_and_Unclaim_a_Subject__mpfkYUsVRVWBT82qKGnNUw\" \n      width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n    </Accordion.Item>\n    \n  </Accordion>\n  )\n}\n\nexport default Attendancescribe","import { Tabs, Container, Anchor, Center, Box, Text } from \"@mantine/core\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport AttendanceFilter from \"../component/Attendance/AttendanceFilter\";\nimport Attendance from \"../component/Attendance/Layout\";\nimport axios from \"../axiosConfig\";\nimport { useEffect, useState } from \"react\";\nimport AttendanceDash from \"../component/Attendance/AttendanceDash\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport AttendanceReport from \"../component/Spreadsheets/AttendanceReport\";\nimport EditAttendance from \"../component/Attendance/EditAttendance\";\nimport Attendancescribe from \"../component/Scribe/Attendancescribe\";\n\n\nexport default function AttendanceTabs() {\n  const navigate = useNavigate();\n  const { tabValue } = useParams();\n  const [subjectList, setSubjectList] = useState();\n  const [stats, setStats] = useState();\n  const [reqData, setreqData] = useState(false);\n  const [attendData, setAttendData] = useState([]);\n  const [filters, setFilters] = useState({\n    date: new Date().toISOString().slice(0, 10),\n  });\n  const getSubjects = () => {\n    axios\n      .get(\"/faculty\", { withCredentials: true })\n      .then((res) => {\n        const objects = res.data.objects;\n        setSubjectList(objects);\n      });\n  };\n  const getData = (data) => {\n    console.log(data);\n    setAttendData(data.objects);\n  };\n\n  useEffect(() => {\n    axios\n      .post(`/attend/stats?date=${filters.date}`, null, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        setStats(res.data.objects);\n      });\n  }, [filters]);\n\n  return (\n    <Container>\n      <Anchor href=\"/dashboard\" color={\"gray\"} mt={24}>\n        <Center inline>\n          {<IconArrowLeft size={24} stroke={1.5} />}\n          <Box ml={5}>Back to Dashboard</Box>\n        </Center>\n      </Anchor>\n      <Tabs\n        variant=\"pills\"\n        radius=\"lg\"\n        defaultValue=\"1\"\n        value={tabValue}\n        onTabChange={(value) => navigate(`/attend-mgmt/${value}`)}\n      >\n        <Tabs.List>\n          <Tabs.Tab value=\"1\">Attendance Dashboard</Tabs.Tab>\n          <Tabs.Tab value=\"2\" onClick={getSubjects}>\n            Mark Attendance\n          </Tabs.Tab>\n          <Tabs.Tab value=\"3\">Edit Attendance</Tabs.Tab>\n          <Tabs.Tab value=\"4\">Report Generation</Tabs.Tab>\n          <Tabs.Tab value=\"5\">How to use</Tabs.Tab>\n        </Tabs.List>\n\n        <Tabs.Panel value=\"1\" pt=\"xs\">\n          Attendance Dashboard\n          {/* <AttendanceFilter onChange={getData}></AttendanceFilter> */}\n          <AttendanceDash\n            data={stats}\n            currFilters={filters}\n            setFilters={setFilters}\n          ></AttendanceDash>\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"2\" pt=\"xs\">\n          <Attendance></Attendance>\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"3\" pt=\"xs\">\n          Edit Previous Attendance\n          <AttendanceFilter\n            onChange={getData}\n            reqData={reqData}\n          ></AttendanceFilter>\n          <EditAttendance data={attendData} reqRefresh={setreqData} />\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"4\" pt=\"xs\">\n          Generate Report\n          <AttendanceFilter onChange={getData}></AttendanceFilter>\n          <AttendanceReport\n            data={attendData}\n            filters={filters}\n          ></AttendanceReport>\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"5\" pt=\"xs\">\n          How to use\n          <Attendancescribe/>\n        </Tabs.Panel>\n      </Tabs>\n    </Container>\n  );\n}\n"],"names":["AnimatedProgressBarCircle","data","title","color","dataDisplay","console","log","shadow","radius","p","size","isNaN","x","Math","round","Number","y","colorScale","innerRadius","m","order","weight","AreaChart","xAxis","map","obj","Date","date","toLocaleDateString","theme","VictoryTheme","tickValues","tickFormat","dependentAxis","minDomain","interpolation","avg","BarChart","y_tickValues","domainPadding","maxDomain","style","fill","AttendanceFilter","children","onChange","reqData","useState","selectData","setSelectData","setDate","for","subject","filters","setFilters","useEffect","axios","then","res","getData","withCredentials","objects","temp","forEach","object","push","Subject","subCode","subName","Container","Grid","gutter","gutterXs","gutterMd","gutterXl","span","NativeSelect","label","description","withAsterisk","e","target","value","split","icon","IconBooks","DatePicker","IconCalendarEvent","placeholder","useStyles","createStyles","rowSelected","backgroundColor","colorScheme","fn","rgba","colors","primaryColor","TableSelection","createdAt","reqRefresh","presenteeList","attendObj","StudentUserId","userId","presentee","SubjectSubCode","classes","cx","btnState","setBtnState","selection","setSelection","rows","item","selected","includes","className","Checkbox","checked","id","current","filter","transitionDuration","Group","spacing","Avatar","src","avatar","Text","User","fullname","rollno","ScrollArea","Table","sx","minWidth","verticalSpacing","highlightOnHover","width","length","indeterminate","Button","mt","onClick","showNotification","message","IconCheck","disallowClose","autoClose","catch","err","response","IconX","loading","disabled","undefined","Attendance","studentList","setStudentList","subjectList","setSubjectList","subjectSubCode","setSubjectSubCode","setCreatedAt","sem","SubCode","name","YearlyStats","currFilters","Paper","Center","Title","getDate","toISOString","slice","SimpleGrid","cols","deptAvg","Divider","mb","subwise","element","AttendanceDash","breakpoints","maxWidth","dailyAvg","classwise","AttendanceReport","registerAllModules","HyperFormula","licenseKey","buttonClickCallback","hotRef","useRef","hot","hotInstance","setDataAtCell","exportPlugin","getPlugin","downloadFile","bom","columnDelimiter","columnHeaders","exportHiddenColumns","exportHiddenRows","fileExtension","filename","toDateString","mimeType","rowDelimiter","rowHeaders","td","contextMenu","manualColumnMove","manualColumnResize","manualRowMove","manualRowResize","allowInsertColumn","allowInsertRow","allowRemoveColumn","allowRemoveRow","ref","formulas","engine","dataSchema","Student","height","stretchH","dropdownMenu","columnSorting","indicator","colHeaders","columns","fullWidth","leftIcon","IconDownload","EditAttendance","isEdit","setIsEdit","onFocus","random","variant","Accordion","defaultValue","allowfullscreen","frameborder","AttendanceTabs","navigate","useNavigate","tabValue","useParams","stats","setStats","setreqData","attendData","setAttendData","Anchor","href","inline","IconArrowLeft","stroke","Box","ml","Tabs","onTabChange","Tab","pt"],"sourceRoot":""}