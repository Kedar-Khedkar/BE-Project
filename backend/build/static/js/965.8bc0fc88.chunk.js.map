{"version":3,"file":"static/js/965.8bc0fc88.chunk.js","mappings":"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","sources":["component/Add User/StudentForm.jsx","component/Add User/FacultyForm.jsx","component/ExtractUsers/ExtractUsers.jsx","component/Add User/AddUser.jsx","component/UserManagement/EditFacultyForm.jsx","component/UserManagement/FacultyManagementTable.jsx","component/UserManagement/RestoreUsersTable.jsx","component/UserManagement/EditStudentForm.jsx","component/UserManagement/StudentManagementTable.jsx","component/Scribe/Userscribe.jsx","pages/UserTabs.jsx"],"sourcesContent":["import {\n  Space,\n  Container,\n  SimpleGrid,\n  TextInput,\n  NumberInput,\n  Button,\n  NativeSelect,\n} from \"@mantine/core\";\nimport { IconUserPlus, IconCheck, IconX } from \"@tabler/icons-react\";\nimport axios from \"../../axiosConfig\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { useForm } from \"@mantine/form\";\n\nexport function StudentForm() {\n  const form = useForm({\n    initialValues: {\n      user: {\n        email: \"\",\n        fullname: \"\",\n        role: \"student\",\n      },\n      student: {\n        rollno: null,\n        examseatno: \"\",\n        curr_sem: \"3\",\n        prn: \"\",\n        curryear: \"2\",\n      },\n      parent: {\n        email: \"\",\n        phone: \"\",\n      },\n    },\n\n    // functions will be used to validate values at corresponding key\n    validate: {\n      // user: {\n      //   phone: (value) => String(value).length === 10 ? null : \"Invalid phone number\",\n      //   email: (value) => (/^\\S+@\\S+$/.test(value) ? null : \"Invalid email\"),\n      //   fullname: (value) => typeof value === \"string\" ? null : \"Invalid name\",\n      // },\n    },\n  });\n  const handleSubmitStudent = (event, values) => {\n    console.log(form.values);\n    axios\n      .post(\"/users/studentRegister\", form.values)\n      .then(function (response) {\n        if (response.data.status === \"success\") {\n          showNotification({\n            title: \"Success\",\n            message: \"User added successfully\",\n            icon: <IconCheck />,\n            color: \"teal\",\n            autoClose: 2000,\n            radius: \"xl\",\n          });\n        } else {\n          showNotification({\n            title: \"Fail\",\n            message: response.data.err,\n            icon: <IconX />,\n            color: \"red\",\n            autoClose: 3500,\n            radius: \"xl\",\n          });\n        }\n      })\n      .catch(function (res) {\n        showNotification({\n          title: \"Fail\",\n          message: res.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n  return (\n    <>\n      <form onSubmit={form.onSubmit(handleSubmitStudent)}>\n        <Container>\n          <Space h=\"xs\" />\n          <SimpleGrid\n            cols={2}\n            breakpoints={[{ maxWidth: 980, cols: 1, spacing: \"md\" }]}\n          >\n            <div>\n              <TextInput\n                placeholder=\"Your name\"\n                label=\"Name\"\n                withAsterisk\n                {...form.getInputProps(\"user.fullname\")}\n              />\n            </div>\n            <div>\n              <TextInput\n                placeholder=\"dev@mmcoe.edu.in\"\n                label=\"Email\"\n                {...form.getInputProps(\"user.email\")}\n              />\n            </div>\n            <div>\n              <TextInput\n                placeholder=\"parent@email.com\"\n                label=\"Parent's Email\"\n                {...form.getInputProps(\"parent.email\")}\n              />\n            </div>\n            <div>\n              <NumberInput\n                placeholder=\"0000000000\"\n                label=\"Parent's Phone number\"\n                hideControls\n                {...form.getInputProps(\"parent.phone\")}\n              />\n            </div>\n            <div>\n              <TextInput\n                placeholder=\"7xxxxxxxxx\"\n                label=\"Exam Seat number\"\n                {...form.getInputProps(\"student.examseatno\")}\n              />\n            </div>\n            <div>\n              <NumberInput\n                placeholder=\"1\"\n                label=\"Roll number\"\n                hideControls\n                {...form.getInputProps(\"student.rollno\")}\n              />\n            </div>\n            <div>\n              <TextInput\n                placeholder=\"xxxxxxxx\"\n                label=\"PRN number\"\n                {...form.getInputProps(\"student.prn\")}\n              />\n            </div>\n            <div>\n              <NativeSelect\n                placeholder=\"3\"\n                label=\"Current semester\"\n                data={[\"3\", \"4\", \"5\", \"6\", \"7\", \"8\"]}\n                {...form.getInputProps(\"student.curr_sem\")}\n              />\n            </div>\n            <div>\n              <NativeSelect\n                placeholder=\"3\"\n                label=\"Current academic year\"\n                data={[\"2\", \"3\", \"4\"]}\n                {...form.getInputProps(\"student.curr  year\")}\n              />\n            </div>\n          </SimpleGrid>\n          <Space h=\"md\" />\n          <Container size={500} px={0}>\n            <Button fullWidth type=\"submit\" leftIcon={<IconUserPlus />}>\n              Add User\n            </Button>\n          </Container>\n        </Container>\n      </form>\n    </>\n  );\n}\n","import {\n  Space,\n  Container,\n  SimpleGrid,\n  TextInput,\n  Button\n} from \"@mantine/core\";\nimport { IconUserPlus, IconCheck, IconX } from \"@tabler/icons-react\";\nimport axios from \"../../axiosConfig\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { useForm, isEmail, isNotEmpty } from \"@mantine/form\";\n\n// import useradd from \"../../assets/Images/person-plus-fill.svg\";\nexport function FacultyForm() {\n  const form = useForm({\n    initialValues: {\n      user: {\n        email: \"\",\n        fullname: \"\",\n        // phone: 0,\n        // facultyid: \"\",\n        role: \"faculty\",\n      },\n    },\n\n    // functions will be used to validate values at corresponding key\n    validate: {\n      user: {\n        // phone: (value) =>\n        //   String(value).length === 10 ? null : \"Invalid phone number\",\n        // \n        email: isEmail('Invalid email'),\n        fullname: isNotEmpty(\"Enter the name\")\n      },\n    },\n  });\n  const handleSubmitFaculty = (event, values) => {\n    // form.setFieldValue('role',\"faculty\")\n    console.log(form.values);\n    axios\n      .post(\"/users/facultyRegister\", form.values)\n      .then(function (response) {\n        if (response.data.status === \"success\") {\n          showNotification({\n            title: \"Success\",\n            message: \"User added successfully\",\n            icon: <IconCheck />,\n            color: \"teal\",\n            autoClose: 2000,\n            radius: \"xl\",\n          });\n        } else {\n          showNotification({\n            title: \"Fail\",\n            message: response.data.err,\n            icon: <IconX />,\n            color: \"red\",\n            autoClose: 2000,\n            radius: \"xl\",\n          });\n        }\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n  };\n  return (\n    <>\n      <form onSubmit={form.onSubmit(handleSubmitFaculty)}>\n        <Container>\n          <Space h=\"xs\" />\n          <SimpleGrid\n            cols={2}\n            breakpoints={[{ maxWidth: 980, cols: 1, spacing: \"md\" }]}\n          >\n            <div>\n              <TextInput\n                placeholder=\"Your name\"\n                label=\"Name\"\n                withAsterisk\n                \n                {...form.getInputProps(\"user.fullname\")} />\n            </div>\n            <div>\n              <TextInput\n                placeholder=\"dev@mmcoe.edu.in\"\n                label=\"Email\"\n                withAsterisk\n                {...form.getInputProps(\"user.email\")} />\n            </div>\n            {/* <div>\n              <TextInput\n                placeholder=\"Faculty Id\"\n                label=\"Faculty Id\"\n                {...form.getInputProps(\"user.facultyid\")}\n                // withAsterisk\n              />\n            </div> */}\n\n            {/* <div>\n              <NumberInput\n                placeholder=\"00000000000\"\n                label=\"Phone\"\n                hideControls\n                {...form.getInputProps(\"user.phone\")}\n              />\n            </div> */}\n          </SimpleGrid>\n          <Space h=\"md\" />\n          <Container size={500} px={0}>\n            <Button\n              fullWidth\n              // variant=\"outline\"\n              type=\"submit\"\n              leftIcon={<IconUserPlus />}\n            >\n              Add User\n            </Button>\n          </Container>\n        </Container>\n      </form>\n    </>\n  );\n}\n","import { Container, Title, Anchor, Table, Badge, Center,Space } from \"@mantine/core\";\nimport DropzoneButton from \"../Drop zone/Dropzone\";\nimport { MS_EXCEL_MIME_TYPE } from \"@mantine/dropzone\";\nimport { IconFileSpreadsheet, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { IconCheck,IconFileDownload } from \"@tabler/icons-react\";\nimport { openModal } from \"@mantine/modals\";\n\nexport default function ExtractUsers() {\n  const ths = (\n    <tr>\n      <th>Email</th>\n      <th>Full name</th>\n      <th>Role</th>\n      <th>Error encountered</th>\n    </tr>\n  );\n\n  const handleResponse = (res) => {\n    console.log(res);\n    const { data } = res;\n    if (data.status === \"success\") {\n      showNotification({\n        title: \"Success!\",\n        message: data.objects.msg,\n        color: \"teal\",\n        icon: <IconCheck />,\n        autoClose: 2000,\n        radius: \"xl\",\n      });\n    } \n    else {\n      const rows = data.objects.map((user) => (\n        <tr key={Math.random()}>\n          <td>{user.email}</td>\n          <td>{user.fullname}</td>\n          <td>{user.role}</td>\n          <td>\n            <Badge color=\"red\">{user.errmsg}</Badge>\n          </td>\n        </tr>\n      ));\n      showNotification({\n        title: \"Failed!\",\n        message: data.err,\n        color: \"red\",\n        icon: <IconX />,\n        disallowClose: false,\n      });\n      openModal({\n        title: \"The following errors were encountered\",\n        children: (\n          <Table striped highlightOnHover>\n            <thead>{ths}</thead>\n            <tbody>{rows}</tbody>\n          </Table>\n        ),\n        size: \"auto\",\n      });\n    }\n  };\n  return (\n    <>\n      <Container>\n        <Title order={1}  align=\"center\">Create Users by uploading Excel sheet</Title>\n        <Center>\n\n        <IconFileDownload size={20} stroke={1.5}/>\n       \n        <Anchor target={\"_self\"} href=\"http://localhost:5000/users/download\"  >\n        Click here to download template file.\n        </Anchor>\n        </Center>\n        <Space h=\"sm\"/>\n        <DropzoneButton\n          uploadLink={\"/users/upload\"}\n          accept={MS_EXCEL_MIME_TYPE}\n          onResponse={handleResponse}\n          onError={console.log}\n          icon={<IconFileSpreadsheet size={50} stroke={1.5} />}\n          \n        />\n      </Container>\n    </>\n  );\n}\n","\nimport {\n  Text,\n  Paper,\n  Space,\n  Container,\n  Switch,\n  SegmentedControl,\n  Stack,\n} from \"@mantine/core\";\nimport { useState } from \"react\";\nimport { StudentForm } from \"./StudentForm\";\nimport { FacultyForm } from \"./FacultyForm\";\nimport ExtractUsers from \"../ExtractUsers/ExtractUsers\";\n\nfunction Forms() {\n  const [category, setCategory] = useState(\"faculty\");\n  return (\n    <>\n      <Stack align=\"center\">\n        <Space h=\"xs\" />\n        <SegmentedControl\n          color=\"blue\"\n          value={category}\n          size=\"md\"\n          radius={20}\n          onChange={setCategory}\n          data={[\n            { value: \"faculty\", label: \"Faculty\" },\n            { value: \"ftudent\", label: \"Student\" },\n          ]}\n        />\n      </Stack>\n      <div className=\"addUserForm\">\n        {category === \"faculty\" ? <FacultyForm /> : <StudentForm />}\n      </div>\n    </>\n  );\n}\nexport default function AddUser() {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Container>\n      <Paper shadow=\"md\" p=\"md\" withBorder>\n        <Text align=\"center\" fz=\"xl\" fw={700}>\n          Add User\n        </Text>\n        {/* <Text align=\"center\">\n          Use it to create cards, dropdowns, modals and other components that\n          require background with shadow\n        </Text> */}\n        <Stack align=\"center\">\n          <Space h=\"xs\" />\n          <Switch\n            checked={checked}\n            onChange={(event) => setChecked(event.currentTarget.checked)}\n            size=\"md\"\n            label=\"Upload files\"\n          />\n        </Stack>\n\n        {checked ? <ExtractUsers /> : <Forms />}\n      </Paper>\n    </Container>\n  );\n}\n","import { useForm } from \"@mantine/form\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, NativeSelect, TextInput } from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nexport default function EditFacultyForm({ data, onClose, opened, reqRefresh }) {\n  const [formValue, setFormValue] = useState({\n    fullname: data.fullname,\n    email: data.email,\n    role: data.role,\n  });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .put(\n        `/users/${data.id}`,\n        { user: formValue },\n       \n      )\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"Information Updated Successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        reqRefresh();\n        onClose(undefined);\n      })\n      .catch((err) => {\n        console.log(err.response.data.err);\n        showNotification({\n          title: \"Failed\",\n          message: err.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: false,\n          //disallowClose: true,\n          radius: \"xl\",\n        });\n      });\n  };\n  return (\n    <Modal\n      opened={opened}\n      onClose={() => onClose(undefined)}\n      title={\"Edit Faculty Account\"}\n    >\n      <form action=\"\" onSubmit={handleSubmit}>\n        <TextInput\n          label={\"Fullname\"}\n          required\n          onChange={(e) => {\n            setFormValue({ ...formValue, fullname: e.target.value });\n          }}\n          value={formValue.fullname}\n        />\n        <TextInput\n          label={\"email\"}\n          required\n          onChange={(e) => {\n            setFormValue({ ...formValue, email: e.target.value });\n          }}\n          value={formValue.email}\n        />\n        <NativeSelect\n          label={\"Role\"}\n          required\n          data={[\"admin\", \"faculty\"]}\n          value={formValue.role}\n          onChange={(e) => {\n            setFormValue({ ...formValue, role: e.target.value });\n          }}\n        />\n        <Button type=\"submit\" radius=\"md\" mt={12}>\n          Update\n        </Button>\n      </form>\n    </Modal>\n  );\n}\n","import {\n  Badge,\n  Table,\n  Group,\n  Text,\n  ActionIcon,\n  Anchor,\n  ScrollArea,\n  useMantineTheme,\n  Tooltip,\n  Paper,\n} from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconPencil, IconTrash, IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { closeAllModals, openModal, openConfirmModal } from \"@mantine/modals\";\nimport { useForm } from \"@mantine/form\";\nimport { useState } from \"react\";\nimport EditFacultyForm from \"./EditFacultyForm\";\n\nexport default function FacultyManagementTable({ data, reqRefresh }) {\n  console.log(data);\n  const theme = useMantineTheme();\n  const [formdata, setFormData] = useState();\n  const refresh = () => {\n    reqRefresh(\"faculty\");\n  };\n  const deleteUser = (id) => {\n    axios\n      .delete(`/users/${id}`)\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"User Deleted successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        reqRefresh(\"faculty\");\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: res.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n  const rows = data.map((item) => (\n    // const rows = (\n    <tr key={item.id}>\n      <td>\n        <Group spacing=\"sm\">\n          {/* <Avatar size={30} src={item.avatar} radius={30} /> */}\n          <Text size=\"sm\" weight={500}>\n            {item.fullname}\n          </Text>\n        </Group>\n      </td>\n\n      <td>\n        <Badge\n          variant={theme.colorScheme === \"dark\" ? \"light\" : \"outline\"}\n          color={item.role === \"admin\" ? \"pink\" : \"cyan\"}\n        >\n          {item.role}\n        </Badge>\n      </td>\n      <td>\n        <Anchor\n          size=\"sm\"\n          href=\"#\"\n          onClick={(event) => event.preventDefault()}\n          underline={false}\n        >\n          {item.email}\n        </Anchor>\n      </td>\n      <td>\n        <Group>\n          <Tooltip label=\"Edit user\" color=\"dark\" withArrow>\n            <ActionIcon\n              onClick={async () => {\n                setFormData(item);\n                console.log(formdata);\n              }}\n            >\n              <IconPencil size={16} stroke={1.5} />\n            </ActionIcon>\n          </Tooltip>\n          <Tooltip label=\"Delete user\" color=\"dark\" withArrow>\n            <ActionIcon\n              color=\"red\"\n              onClick={() => {\n                openDeleteModal(item.fullname, item.id);\n              }}\n            >\n              <IconTrash size={16} stroke={1.5} />\n            </ActionIcon>\n          </Tooltip>\n        </Group>\n      </td>\n    </tr>\n  ));\n\n  const openDeleteModal = (fullname, id) =>\n    openConfirmModal({\n      title: `Delete ${fullname}  profile`,\n      centered: true,\n      children: (\n        <Text>\n          Are you sure you want to delete{\" \"}\n          <Text span fw={700}>\n            {\" \"}\n            {fullname}'s{\" \"}\n          </Text>{\" \"}\n          profile? This action is destructive.\n        </Text>\n      ),\n      labels: { confirm: \"Delete account\", cancel: \"cancel\" },\n      confirmProps: { color: \"red\" },\n      onCancel: () => closeAllModals,\n      onConfirm: () => deleteUser(id),\n    });\n  return (\n    <Paper shadow=\"md\" p=\"md\">\n      <ScrollArea>\n        {formdata && (\n          <EditFacultyForm\n            opened={formdata !== undefined}\n            data={formdata}\n            onClose={setFormData}\n            reqRefresh={refresh}\n          />\n        )}\n        <Table\n          sx={{ minWidth: 800 }}\n          verticalSpacing=\"sm\"\n          // striped\n          highlightOnHover\n        >\n          <thead>\n            <tr>\n              <th>Faculty</th>\n              <th>Role</th>\n              <th>Email</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </Paper>\n  );\n}\n","import {\n  Badge,\n  Table,\n  Group,\n  Text,\n  ActionIcon,\n  Anchor,\n  ScrollArea,\n  useMantineTheme,\n} from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconPencil, IconTrash, IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nexport default function RestoreUsersTable({ data }) {\n  console.log(data);\n  const theme = useMantineTheme();\n  const deleteUser = (id) => {\n    axios\n      .delete(`/users/${id}`, {\n        data: { hardDelete: true },\n        \n      })\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"User Deleted successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: res.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n  const rows = data.map((item) => (\n    // const rows = (\n    <tr key={item.id}>\n      <td>\n        <Group spacing=\"sm\">\n          {/* <Avatar size={30} src={item.avatar} radius={30} /> */}\n          <Text size=\"sm\" weight={500}>\n            {item.fullname}\n          </Text>\n        </Group>\n      </td>\n\n      <td>\n        <Badge\n          variant={theme.colorScheme === \"dark\" ? \"light\" : \"outline\"}\n          color={item.role === \"faculty\" ? \"cyan\" : \"yellow\"}\n        >\n          {item.role}\n        </Badge>\n      </td>\n      <td>\n        <Anchor\n          size=\"sm\"\n          href=\"#\"\n          onClick={(event) => event.preventDefault()}\n          underline={false}\n        >\n          {item.email}\n        </Anchor>\n      </td>\n      <td></td>\n      <td>\n        <Group>\n          <ActionIcon>\n            <IconPencil size={16} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon\n            color=\"red\"\n            onClick={() => {\n              deleteUser(item.userId);\n            }}\n          >\n            <IconTrash size={16} stroke={1.5} />\n          </ActionIcon>\n        </Group>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea>\n      <Table\n        sx={{ minWidth: 800 }}\n        verticalSpacing=\"sm\"\n        // striped\n        highlightOnHover\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Role</th>\n            <th>Email</th>\n            <th></th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n","import { useForm } from \"@mantine/form\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, NativeSelect, TextInput } from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\n\nexport default function EditStudentForm({ data, onClose, opened, reqRefresh }) {\n  const [formValue, setFormValue] = useState({\n    User: {\n      fullname: data.User.fullname,\n      email: data.User.email,\n      // id: data.userId,\n      role: \"student\",\n    },\n    student: {\n      curr_sem: data.curr_sem,\n      curryear: data.curryear,\n      examseatno: data.examseatno,\n      prn: data.prn,\n      rollno: data.rollno,\n    },\n    parent: {\n      email: data.Parent.email,\n      phone: data.Parent.phone,\n    },\n  });\n  const dataSem = [\"3\", \"4\", \"5\", \"6\", \"7\", \"8\"]\n  const [dataYear, setDataYear] = useState(formValue.student.curryear);\n\n\n  /**\n   * If the value of the sem variable is 3 or 4, set the value of the dataYear variable to 2.\n   *\n   * If the value of the sem variable is 5 or 6, set the value of the dataYear variable to 3.\n   *\n   * If the value of the sem variable is 7 or 8, set the value of the dataYear variable to 4.\n   *\n   * If the value of the sem variable is anything else, do nothing.\n   */\n  const handleSemYear = (sem) => {\n    if (sem === \"3\" || sem === \"4\") {\n      setDataYear(\"2\");\n      return \"2\";\n    }\n    if (sem === \"5\" || sem === \"6\") {\n      setDataYear(\"3\");\n      return \"3\";\n    }\n    if (sem === \"7\" || sem === \"8\") {\n      setDataYear(\"4\");\n      return \"4\";\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formValue);\n    axios\n      .put(\n        `/users/${data.userId}`,\n        { user: formValue.User },\n    \n      )\n      .then((res) => {\n        axios\n          .put(\n            `/student/${data.userId}`,\n            { student: formValue.student },\n          \n          )\n          .then((res) => {\n            axios\n              .put(\n                `/parents/${data.userId}`,\n                { ...formValue.parent },\n              )\n              .then((res) => {\n                showNotification({\n                  title: \"Success\",\n                  message: \"Information Updated Successfully\",\n                  icon: <IconCheck />,\n                  color: \"teal\",\n                  autoClose: 2000,\n                  radius: \"xl\",\n                });\n                reqRefresh(\"students\");\n                onClose(undefined);\n              })\n              .catch((res) => {\n                showNotification({\n                  title: \"Failed\",\n                  message: res.response.data.err,\n                  icon: <IconX />,\n                  color: \"red\",\n                  autoClose: false,\n                  radius: \"xl\",\n                });\n              });\n          })\n          .catch((res) => {\n            showNotification({\n              title: \"Failed\",\n              message: res.response.data.err,\n              icon: <IconX />,\n              color: \"red\",\n              autoClose: false,\n              radius: \"xl\",\n            });\n          });\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: res.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: false,\n          radius: \"xl\",\n        });\n      });\n  };\n  return (\n    <Modal\n      opened={opened}\n      onClose={() => onClose(undefined)}\n      title={\"Edit Student Account\"}\n    >\n      <form onSubmit={handleSubmit}>\n        <TextInput\n          label=\"Name\"\n          withAsterisk\n          required\n          value={formValue.User.fullname}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              User: { ...formValue.User, fullname: e.target.value },\n            });\n          }}\n        />\n        <TextInput\n          label=\"Email\"\n          withAsterisk\n          required\n          type={\"email\"}\n          value={formValue.User.email}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              User: { ...formValue.User, email: e.target.value },\n            });\n          }}\n        />\n        <TextInput\n          label=\"Roll Number\"\n          withAsterisk\n          required\n          type={\"number\"}\n          value={formValue.student.rollno}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              student: { ...formValue.student, rollno: e.target.value },\n            });\n          }}\n        />\n        <TextInput\n          label=\"Exam seat Number\"\n          value={formValue.student.examseatno}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              student: { ...formValue.student, examseatno: e.target.value },\n            });\n          }}\n        />\n        <TextInput\n          label=\"Permanent Registration Number\"\n          value={formValue.student.prn}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              student: { ...formValue.student, prn: e.target.value },\n            });\n          }}\n        />\n        <NativeSelect\n          data={dataSem}\n          label=\"Semester\"\n          value={formValue.student.curr_sem}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              student: {\n                ...formValue.student,\n                curr_sem: e.target.value,\n                curryear: handleSemYear(e.target.value),\n              },\n            });\n          }}\n        />\n        <TextInput\n         label=\"Year\"\n         value={dataYear}\n         disabled\n        />\n        <TextInput\n          label=\"Parent Mobile Number\"\n          value={formValue.parent.phone}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              parent: { ...formValue.parent, phone: e.target.value },\n            });\n          }}\n        />\n        <TextInput\n          label=\"Parent Email\"\n          value={formValue.parent.email}\n          onChange={(e) => {\n            setFormValue({\n              ...formValue,\n              parent: { ...formValue.parent, email: e.target.value },\n            });\n          }}\n        />\n\n        <Button type=\"submit\" radius=\"md\" mt={12} leftIcon={<IconCheck />}>\n          Submit\n        </Button>\n      </form>\n    </Modal>\n  );\n}\n","import {\n  Badge,\n  Table,\n  Group,\n  Text,\n  ActionIcon,\n  Anchor,\n  ScrollArea,\n  useMantineTheme,\n  Tooltip,\n  Paper,\n} from \"@mantine/core\";\nimport axios from \"../../axiosConfig\";\nimport { IconPencil, IconTrash, IconCheck, IconX } from \"@tabler/icons-react\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { closeAllModals, openModal, openConfirmModal } from \"@mantine/modals\";\nimport React, { useState } from \"react\";\nimport EditStudentForm from \"./EditStudentForm\";\n\nexport default function StudentManagementTable({ data, reqRefresh }) {\n  const theme = useMantineTheme();\n  console.log(data);\n  const [studentData, setStudentData] = useState(undefined);\n  const deleteUser = (id) => {\n    axios\n      .delete(`/users/${id}`)\n      .then((res) => {\n        showNotification({\n          title: \"Success\",\n          message: \"User Deleted successfully\",\n          icon: <IconCheck />,\n          color: \"teal\",\n          autoClose: 2000,\n          radius: \"xl\",\n        });\n        reqRefresh(\"students\");\n      })\n      .catch((res) => {\n        showNotification({\n          title: \"Failed\",\n          message: res.response.data.err,\n          icon: <IconX />,\n          color: \"red\",\n          autoClose: 3500,\n          radius: \"xl\",\n        });\n      });\n  };\n\n  const rows = data.map((item) => (\n    // const rows = (\n    <tr key={item.userId}>\n      <td>\n        <Group spacing=\"sm\">\n          {/* <Avatar size={30} src={item.avatar} radius={30} /> */}\n          <Text size=\"sm\" weight={500}>\n            {item.User.fullname}\n          </Text>\n        </Group>\n      </td>\n\n      <td>\n        <Badge\n          variant={theme.colorScheme === \"dark\" ? \"light\" : \"outline\"}\n          color=\"yellow\"\n        >\n          Student\n        </Badge>\n      </td>\n      <td>\n        <Anchor\n          size=\"sm\"\n          href=\"#\"\n          onClick={(event) => event.preventDefault()}\n          underline={false}\n        >\n          {item.User.email}\n        </Anchor>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.rollno}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.examseatno}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.prn}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.curr_sem}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.curryear}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.Parent.phone}</Text>\n      </td>\n      <td>\n        <Text size=\"sm\">{item.Parent.email}</Text>\n      </td>\n      <td>\n        <Group>\n          <Tooltip label=\"Edit user\" color=\"dark\" withArrow>\n            <ActionIcon\n              onClick={() => {\n                setStudentData(item);\n              }}\n            >\n              <IconPencil size={16} stroke={1.5} />\n            </ActionIcon>\n          </Tooltip>\n          <Tooltip label=\"Delete user\" color=\"dark\" withArrow>\n          <ActionIcon\n            color=\"red\"\n            onClick={() => {\n              openDeleteModal(item.User.fullname, item.userId);\n            }}\n          >\n            <IconTrash size={16} stroke={1.5} />\n          </ActionIcon>\n          </Tooltip >\n        </Group>\n      </td>\n    </tr>\n  ));\n  const openDeleteModal = (fullname, id) =>\n    openConfirmModal({\n      title: `Delete ${fullname}  profile`,\n      centered: true,\n      children: (\n        <Text>\n          Are you sure you want to delete{\" \"}\n          <Text span fw={700}>\n            {\" \"}\n            {fullname}'s{\" \"}\n          </Text>{\" \"}\n          profile? This action is destructive.\n        </Text>\n      ),\n      labels: { confirm: \"Delete account\", cancel: \"cancel\" },\n      confirmProps: { color: \"red\" },\n      onCancel: () => closeAllModals,\n      onConfirm: () => deleteUser(id),\n    });\n  return (\n    <Paper shadow=\"md\" p=\"md\">\n      <ScrollArea h={700}>\n        {studentData && (\n          <EditStudentForm\n            opened={studentData != undefined}\n            onClose={setStudentData}\n            data={studentData}\n            reqRefresh={reqRefresh}\n          />\n        )}\n        <Table\n          sx={{ minWidth: 800 }}\n          verticalSpacing=\"sm\"\n          // striped\n          highlightOnHover\n          withColumnBorders\n        >\n          <thead>\n            <tr>\n              <th>Student</th>\n              <th>Role</th>\n              <th>Email</th>\n              <th>Roll no.</th>\n              <th>Exam seat no.</th>\n              <th>PRN</th>\n              <th>Semester</th>\n              <th>Year</th>\n              <th>Parent's Mobile Number</th>\n              <th>Parent's Email</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </Table>\n      </ScrollArea>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { Accordion } from '@mantine/core';\n\nfunction UserScribe() {\n  return (\n    <Accordion defaultValue=\"customization\">\n      <Accordion.Item value=\"Create Users\">\n        <Accordion.Control>Create Users</Accordion.Control>\n        <Accordion.Panel><iframe src=\"https://scribehow.com/embed/How_to_Add_a_User_with_Name_and_Email__oo9I87-cQhep0jDSkyFrcA?as=scrollable\" \n        width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n\n\n        <Accordion.Panel><iframe src=\"https://scribehow.com/embed/Uploading_a_File_on_User_Management_1__bNz3eU8lRUu32poLsXe12w?as=scrollable\" \n        width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n      </Accordion.Item>\n\n      <Accordion.Item value=\"manage-faculty\">\n        <Accordion.Control>Manage Faculty</Accordion.Control>\n        <Accordion.Panel><iframe src=\"https://scribehow.com/embed/Updating_a_Users_Email_Address__HxzMrCxDTu29VOqfBlVNBw\" \n        width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n      </Accordion.Item>\n\n      <Accordion.Item value=\"manage-students\">\n        <Accordion.Control>Manage Students</Accordion.Control>\n        <Accordion.Panel><iframe src=\"https://scribehow.com/embed/How_to_Edit_and_Delete_User_Account_Information__saclmdD_TP6xQ77wZkzDGg\" \n        width=\"100%\" height=\"640\" allowfullscreen frameborder=\"0\"></iframe></Accordion.Panel>\n      </Accordion.Item>\n\n      <Accordion.Item value=\"restore accounts\">\n        <Accordion.Control>Restore Deleted Accounts</Accordion.Control>\n        <Accordion.Panel></Accordion.Panel>\n      </Accordion.Item>\n    </Accordion>\n  )\n}\n\nexport default UserScribe","import { Tabs, Container, Anchor, Box, Center } from \"@mantine/core\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport axios from \"../axiosConfig\";\nimport { useEffect, useState } from \"react\";\nimport AddUser from \"../component/Add User/AddUser\";\nimport FacultyManagementTable from \"../component/UserManagement/FacultyManagementTable\";\nimport RestoreUsersTable from \"../component/UserManagement/RestoreUsersTable\";\nimport StudentManagementTable from \"../component/UserManagement/StudentManagementTable\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Userscribe from \"../component/Scribe/Userscribe\";\n\nexport default function UserTabs() {\n  const navigate = useNavigate();\n  const { tabValue } = useParams();\n  const [facultyData, setFacultyData] = useState([]);\n  const [studentData, setStudentData] = useState([]);\n  const [trashedUsers, setTrashedUsers] = useState([]);\n  const [refresh, setRefresh] = useState(\"first-render\");\n  const getFaculty = () => {\n    axios\n      .get(\"/faculty/all\")\n      .then((res) => {\n        setFacultyData(res.data.objects);\n      });\n  };\n\n  const getStudents = () => {\n    axios\n      .get(\"/student/search\")\n      .then((res) => {\n        setStudentData(res.data.objects);\n      });\n  };\n\n  const getTrash = () => {\n    axios\n      .get(\"/users/trash\")\n      .then((res) => {\n        setTrashedUsers(res.data.objects);\n      });\n  };\n\n  useEffect(() => {\n    if (refresh === \"first-render\") {\n      getFaculty();\n      getStudents();\n      getTrash();\n    } else if (refresh === \"faculty\") {\n      getFaculty();\n      setRefresh(undefined);\n    } else if (refresh === \"students\") {\n      getStudents();\n      setRefresh(undefined);\n    } else if (refresh === \"trash\") {\n      getTrash();\n      setRefresh(undefined);\n    }\n  }, [refresh]);\n\n  return (\n    <Container size={\"xl\"}>\n      <Anchor href=\"/dashboard\" color={\"gray\"} mt={24}>\n        <Center inline>\n          {<IconArrowLeft size={24} stroke={1.5} />}\n          <Box ml={5}>Back to Dashboard</Box>\n        </Center>\n      </Anchor>\n      <Tabs\n        variant=\"pills\"\n        radius=\"lg\"\n        defaultValue=\"1\"\n        value={tabValue}\n        onTabChange={(value) => {\n          navigate(`/user-mgmt/${value}`);\n        }}\n      >\n        <Tabs.List>\n          <Tabs.Tab value=\"1\">Create Users</Tabs.Tab>\n          <Tabs.Tab value=\"2\">Manage Faculty</Tabs.Tab>\n          <Tabs.Tab value=\"3\">Manage Students</Tabs.Tab>\n          {/* <Tabs.Tab value=\"4\">Restore Deleted accounts</Tabs.Tab> */}\n          <Tabs.Tab value=\"5\">How to use</Tabs.Tab>\n        </Tabs.List>\n\n        <Tabs.Panel value=\"1\" pt=\"xs\">\n          Create new users\n          <AddUser />\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"2\" pt=\"xs\">\n          Manage all faculty accounts\n          <FacultyManagementTable data={facultyData} reqRefresh={setRefresh} />\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"3\" pt=\"xs\">\n          Manage all student accounts\n          <StudentManagementTable data={studentData} reqRefresh={setRefresh} />\n        </Tabs.Panel>\n        <Tabs.Panel value=\"4\" pt=\"xs\">\n          Restore or Permanently Delete, previously deleted, accounts.\n          <RestoreUsersTable data={trashedUsers} reqRefresh={setRefresh} />\n        </Tabs.Panel>\n\n        <Tabs.Panel value=\"5\" pt=\"xs\">\n          <Userscribe/>\n        </Tabs.Panel>\n      </Tabs>\n    </Container>\n  );\n}\n"],"names":["StudentForm","form","useForm","initialValues","user","email","fullname","role","student","rollno","examseatno","curr_sem","prn","curryear","parent","phone","validate","onSubmit","event","values","console","log","axios","then","response","data","status","showNotification","title","message","icon","IconCheck","color","autoClose","radius","err","IconX","catch","res","Container","Space","h","SimpleGrid","cols","breakpoints","maxWidth","spacing","TextInput","placeholder","label","withAsterisk","getInputProps","NumberInput","hideControls","NativeSelect","size","px","Button","fullWidth","type","leftIcon","IconUserPlus","FacultyForm","isEmail","isNotEmpty","ExtractUsers","ths","Title","order","align","Center","IconFileDownload","stroke","Anchor","target","href","Dropzone","uploadLink","accept","MS_EXCEL_MIME_TYPE","onResponse","objects","msg","rows","map","Badge","errmsg","Math","random","disallowClose","openModal","children","Table","striped","highlightOnHover","onError","IconFileSpreadsheet","Forms","useState","category","setCategory","Stack","SegmentedControl","value","onChange","className","AddUser","checked","setChecked","Paper","shadow","p","withBorder","Text","fz","fw","Switch","currentTarget","EditFacultyForm","onClose","opened","reqRefresh","formValue","setFormValue","Modal","undefined","action","e","preventDefault","id","required","mt","FacultyManagementTable","theme","useMantineTheme","formdata","setFormData","item","Group","weight","variant","colorScheme","onClick","underline","Tooltip","withArrow","ActionIcon","A","IconPencil","openDeleteModal","IconTrash","openConfirmModal","centered","span","labels","confirm","cancel","confirmProps","onCancel","closeAllModals","onConfirm","deleteUser","ScrollArea","sx","minWidth","verticalSpacing","RestoreUsersTable","userId","hardDelete","EditStudentForm","User","Parent","dataYear","setDataYear","sem","disabled","StudentManagementTable","studentData","setStudentData","withColumnBorders","Accordion","defaultValue","src","width","height","allowfullscreen","frameborder","UserTabs","navigate","useNavigate","tabValue","useParams","facultyData","setFacultyData","trashedUsers","setTrashedUsers","refresh","setRefresh","getFaculty","getStudents","getTrash","useEffect","inline","IconArrowLeft","Box","ml","Tabs","onTabChange","Tab","pt","Userscribe"],"sourceRoot":""}